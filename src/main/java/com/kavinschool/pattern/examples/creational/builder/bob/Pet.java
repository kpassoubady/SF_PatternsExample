package com.kavinschool.pattern.examples.creational.builder.bob;

import java.util.Objects;
import java.util.StringJoiner;

public class Pet {

    private int age;
    private float weight;
    private float height;
    private String color;
    private String name;

    // region Constructor, getters, setters, equals, hashCode, toString, builder -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    protected Pet(int age, float weight, float height, String color, String name) {
        this.age = age;
        this.weight = weight;
        this.height = height;
        this.color = Objects.requireNonNull(color);
        this.name = Objects.requireNonNull(name);
    }

    // region Getters and setters -- generated by BoB the Builder of Beans
    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public float getWeight() {
        return weight;
    }

    public void setWeight(float weight) {
        this.weight = weight;
    }

    public float getHeight() {
        return height;
    }

    public void setHeight(float height) {
        this.height = height;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = Objects.requireNonNull(color);
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = Objects.requireNonNull(name);
    }// endregion Getters and setters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Pet that = (Pet) o;

        return Objects.equals(this.getAge(), that.getAge()) && Objects.equals(this.getWeight(), that.getWeight()) && Objects.equals(this.getHeight(), that.getHeight()) && Objects.equals(this.getColor(), that.getColor()) && Objects.equals(this.getName(), that.getName());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAge(), getWeight(), getHeight(), getColor(), getName());
    }

    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "[", "]")
                .add("age=" + getAge()).add("weight=" + getWeight()).add("height=" + getHeight()).add("color=" + getColor()).add("name=" + getName()).toString();
    }// endregion hashCode() and equals()

    // region Builder -- generated by BoB the Builder of Beans
    public static Pet.Builder builder() {
        return new Pet.Builder();
    }

    public static Pet.Builder builder(Pet data) {
        return new Pet.Builder(data);
    }

    public static final class Builder {

        private int age;
        private float weight;
        private float height;
        private String color;
        private String name;

        private Builder() {
        }

        private Builder(Pet initialData) {
            this.age = initialData.getAge();
            this.weight = initialData.getWeight();
            this.height = initialData.getHeight();
            this.color = initialData.getColor();
            this.name = initialData.getName();
        }

        public Builder setAge(int age) {
            this.age = age;
            return this;
        }

        public Builder setWeight(float weight) {
            this.weight = weight;
            return this;
        }

        public Builder setHeight(float height) {
            this.height = height;
            return this;
        }

        public Builder setColor(String color) {
            this.color = color;
            return this;
        }

        public Builder setName(String name) {
            this.name = name;
            return this;
        }

        public Pet build() {
            return new Pet(age, weight, height, color, name);
        }
    }// endregion Builder
    // endregion Constructor, getters, setters, equals, hashCode, toString, builder
}
